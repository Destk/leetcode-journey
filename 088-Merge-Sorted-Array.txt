#include<iostream>
#include<vector>
//функция для решения задачи;
void merge(std::vector<int>& nums1, int m, std::vector<int>& nums2, int n){
  //указатель на nums1 (-1, так как у нас индекс выходит за граници значимых элементов)
  int m1{m-1};
  //указатель на nums2 (-1, так как у нас индекс выходит за граници значимых элементов)
  int n1{n-1};
  //указатель на обновленный nums1 (-1, так как у нас индекс выходит за граници значимых элементов)
  int nm{n+m-1};
  //пока m1 >= 0 или n1 >= 0 => выполняем цикл
  while(m1 >= 0 || n1 >= 0){
    //важное условие на проверку не закончился ли один из массивов
    if( m1 >= 0 && n1 >= 0){
      if((nums1[m1]>nums2[n1])){
        //записываем в позицию nm элемент из позиции m1
        nums1[nm]= nums1[m1];
        //делаем шаг вправо
        m1--;
        nm--;
      } else{
        //аналогично
        nums1[nm] = nums2[n1];
        n1--;
        nm--;
      }
      //если только nums1  не закончился
    }else if(m1 >= 0){
        nums1[nm] = nums1[m1];
        m1--;
        nm--;
      //если только nums2 не закончился
    }else if(n1 >= 0){
        nums1[nm] = nums2[n1];
        n1--;
        nm--;
    }
  }
}
void printNums(std::vector<int>& nums1){
  std::cout<<"nums1 = [ ";
  for(int i = 0; i < nums1.size(); i++){
    std::cout<<nums1[i];
    if(i != nums1.size()-1){
      std::cout<<", ";
    }
  }
  std::cout<<" ]";
}
int main(){
  //переменная для работы цикла
  char r;
  do{
    std::cout<<"Введите кол-во элементов в nums1: \n";
    int m{};
    std::cin>>m;
    //массив 1
    std::vector<int> nums1{};
    std::cout<<"Вводите числа: \n";
    //цикл для ввода элементов в массив
    for(int i = 0; i < m ; i++){
      int y{};
      std::cin>>y;
      nums1.push_back(y);
    }
    if(nums1.empty()){
      return 1;
    }
    std::cout<<"Введите кол-во элементов в nums2: \n";
    int n{};
    std::cin>>n;
    //добавление нулей
    for(int i =0; i < n;i++ ){
      nums1.push_back(0);
    }
    //массив 2
    std::vector<int> nums2{};
    //цикл для ввода элементов в массив
    for(int i = 0; i < n; i++){
      int y{};
      std::cin >> y;
      nums2.push_back(y);
    }
    if(nums2.empty()){
      return 1;
    }
    merge(nums1, m, nums2, n);
    printNums(nums1);
    std::cout<<"Продолжить Y/n\n";
    std::cin>>r;
  }while(r == 'y' || r == 'Y');
  return 0;
}